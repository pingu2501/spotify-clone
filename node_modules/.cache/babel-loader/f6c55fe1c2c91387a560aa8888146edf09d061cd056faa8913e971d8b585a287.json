{"ast":null,"code":"var _jsxFileName = \"/Users/pingu/Documents/spotify/spotify-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./Spotify\";\nimport Login from \"./login-page/login\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport Player from \"./player-page/Player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  _s();\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then(playlist => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 71\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"foik8K8A62p+aotmH1sMm8vTMMQ=\", false, function () {\n  return [useDataLayerValue];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getTokenFromUrl","Login","SpotifyWebApi","useDataLayerValue","Player","jsxDEV","_jsxDEV","spotify","App","_s","user","token","dispatch","hash","window","location","_token","access_token","type","console","log","setAccessToken","getMe","then","getUserPlaylists","playlists","getPlaylist","playlist","discover_weekly","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pingu/Documents/spotify/spotify-clone/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./Spotify\";\nimport Login from \"./login-page/login\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport Player from \"./player-page/Player\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      console.log(\"[token]\", token);\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZF1E34Ucml4HHx1w\").then((playlist) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: playlist,\n        });\n      });\n    }\n  }, []);\n\n  return <div className=\"App\">{token ? <Player spotify={spotify} /> : <Login />}</div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,aAAa;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAG,IAAIL,aAAa,CAAC,CAAC;AAEnC,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAAC;IAAEC,IAAI;IAAEC;EAAM,CAAC,EAAEC,QAAQ,CAAC,GAAGT,iBAAiB,CAAC,CAAC;EAEvDL,SAAS,CAAC,MAAM;IACd,MAAMe,IAAI,GAAGb,eAAe,CAAC,CAAC;IAC9Bc,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;IACzB,MAAMG,MAAM,GAAGH,IAAI,CAACI,YAAY;IAChC,IAAID,MAAM,EAAE;MACVJ,QAAQ,CAAC;QACPM,IAAI,EAAE,WAAW;QACjBP,KAAK,EAAEK;MACT,CAAC,CAAC;MACFG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAET,KAAK,CAAC;MAC7BJ,OAAO,CAACc,cAAc,CAACL,MAAM,CAAC;MAC9BT,OAAO,CAACe,KAAK,CAAC,CAAC,CAACC,IAAI,CAAEb,IAAI,IAAK;QAC7BE,QAAQ,CAAC;UACPM,IAAI,EAAE,UAAU;UAChBR;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACFH,OAAO,CAACiB,gBAAgB,CAAC,CAAC,CAACD,IAAI,CAAEE,SAAS,IAAK;QAC7Cb,QAAQ,CAAC;UACPM,IAAI,EAAE,eAAe;UACrBO;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACFlB,OAAO,CAACmB,WAAW,CAAC,wBAAwB,CAAC,CAACH,IAAI,CAAEI,QAAQ,IAAK;QAC/Df,QAAQ,CAAC;UACPM,IAAI,EAAE,qBAAqB;UAC3BU,eAAe,EAAED;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOrB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAEnB,KAAK,gBAAGL,OAAA,CAACF,MAAM;MAACG,OAAO,EAAEA;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG5B,OAAA,CAACL,KAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACtF;AAACzB,EAAA,CApCQD,GAAG;EAAA,QAC0BL,iBAAiB;AAAA;AAAAgC,EAAA,GAD9C3B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}